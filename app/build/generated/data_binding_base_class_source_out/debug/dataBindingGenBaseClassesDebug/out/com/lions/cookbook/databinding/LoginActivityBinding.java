// Generated by data binding compiler. Do not edit!
package com.lions.cookbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.lions.cookbook.LoginPresent;
import com.lions.cookbook.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LoginActivityBinding extends ViewDataBinding {
  @NonNull
  public final Button loginBtn;

  @NonNull
  public final TextView newAcct;

  @NonNull
  public final Button signUpLink;

  @NonNull
  public final TextInputEditText userId;

  @NonNull
  public final TextInputEditText userPassword;

  @Bindable
  protected LoginPresent mPresenter;

  protected LoginActivityBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button loginBtn, TextView newAcct, Button signUpLink, TextInputEditText userId,
      TextInputEditText userPassword) {
    super(_bindingComponent, _root, _localFieldCount);
    this.loginBtn = loginBtn;
    this.newAcct = newAcct;
    this.signUpLink = signUpLink;
    this.userId = userId;
    this.userPassword = userPassword;
  }

  public abstract void setPresenter(@Nullable LoginPresent presenter);

  @Nullable
  public LoginPresent getPresenter() {
    return mPresenter;
  }

  @NonNull
  public static LoginActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.login_activity, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LoginActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LoginActivityBinding>inflateInternal(inflater, R.layout.login_activity, root, attachToRoot, component);
  }

  @NonNull
  public static LoginActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.login_activity, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LoginActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LoginActivityBinding>inflateInternal(inflater, R.layout.login_activity, null, false, component);
  }

  public static LoginActivityBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LoginActivityBinding bind(@NonNull View view, @Nullable Object component) {
    return (LoginActivityBinding)bind(component, view, R.layout.login_activity);
  }
}
