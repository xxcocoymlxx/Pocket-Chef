// Generated by data binding compiler. Do not edit!
package com.lions.cookbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.lions.cookbook.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityViewRecipeBinding extends ViewDataBinding {
  @NonNull
  public final TextView AmtText;

  @NonNull
  public final TextView IngredientText;

  @NonNull
  public final Button RecipeAuthor;

  @NonNull
  public final TextView RecipeTitle;

  @NonNull
  public final TextView Recommended;

  @NonNull
  public final TextView ServingSize;

  @NonNull
  public final RelativeLayout ServingSizeLayout;

  @NonNull
  public final TextView StepsText;

  @NonNull
  public final RelativeLayout alterRecipeLayout;

  @NonNull
  public final LinearLayout authorIndication;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final Button btnAlterRecipe;

  @NonNull
  public final Button btnDeleteRecipe;

  @NonNull
  public final TextView by;

  @NonNull
  public final RelativeLayout ingredientLayout;

  @NonNull
  public final ListView ingredients;

  @NonNull
  public final FrameLayout navBar;

  @NonNull
  public final Spinner newMeasurementTypes;

  @NonNull
  public final EditText newServingSize;

  @NonNull
  public final TextView publishNotes;

  @NonNull
  public final Switch publishSwitch;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final ListView steps;

  protected ActivityViewRecipeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView AmtText, TextView IngredientText, Button RecipeAuthor, TextView RecipeTitle,
      TextView Recommended, TextView ServingSize, RelativeLayout ServingSizeLayout,
      TextView StepsText, RelativeLayout alterRecipeLayout, LinearLayout authorIndication,
      BottomNavigationView bottomNavigation, Button btnAlterRecipe, Button btnDeleteRecipe,
      TextView by, RelativeLayout ingredientLayout, ListView ingredients, FrameLayout navBar,
      Spinner newMeasurementTypes, EditText newServingSize, TextView publishNotes,
      Switch publishSwitch, ScrollView scrollView, ListView steps) {
    super(_bindingComponent, _root, _localFieldCount);
    this.AmtText = AmtText;
    this.IngredientText = IngredientText;
    this.RecipeAuthor = RecipeAuthor;
    this.RecipeTitle = RecipeTitle;
    this.Recommended = Recommended;
    this.ServingSize = ServingSize;
    this.ServingSizeLayout = ServingSizeLayout;
    this.StepsText = StepsText;
    this.alterRecipeLayout = alterRecipeLayout;
    this.authorIndication = authorIndication;
    this.bottomNavigation = bottomNavigation;
    this.btnAlterRecipe = btnAlterRecipe;
    this.btnDeleteRecipe = btnDeleteRecipe;
    this.by = by;
    this.ingredientLayout = ingredientLayout;
    this.ingredients = ingredients;
    this.navBar = navBar;
    this.newMeasurementTypes = newMeasurementTypes;
    this.newServingSize = newServingSize;
    this.publishNotes = publishNotes;
    this.publishSwitch = publishSwitch;
    this.scrollView = scrollView;
    this.steps = steps;
  }

  @NonNull
  public static ActivityViewRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_view_recipe, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityViewRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityViewRecipeBinding>inflateInternal(inflater, R.layout.activity_view_recipe, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityViewRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_view_recipe, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityViewRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityViewRecipeBinding>inflateInternal(inflater, R.layout.activity_view_recipe, null, false, component);
  }

  public static ActivityViewRecipeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityViewRecipeBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityViewRecipeBinding)bind(component, view, R.layout.activity_view_recipe);
  }
}
